{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.2", "generated_at": "2025-10-21T19:37:00.051773Z", "invocation_id": "01485d01-a0f6-44ee-ab8b-1cd90e653f31", "invocation_started_at": "2025-10-21T19:36:57.637025Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-21T19:36:59.656442Z", "completed_at": "2025-10-21T19:36:59.665324Z"}, {"name": "execute", "started_at": "2025-10-21T19:36:59.667492Z", "completed_at": "2025-10-21T19:36:59.757977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10365033149719238, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enterate.stg_electricity", "compiled": true, "compiled_code": "-- i-DE (electricidad) => columnas esperadas por el modelo com\u00fan\nselect\n  md5(concat_ws('||',\n      'ide','electricity', coalesce(municipio,''), coalesce(via,''), coalesce(numero,''),\n      (to_timestamp(fecha||' '||hora_inicio,'DD/MM/YYYY HH24:MI') at time zone 'Europe/Madrid')::text,\n      (to_timestamp(fecha||' '||hora_fin   ,'DD/MM/YYYY HH24:MI') at time zone 'Europe/Madrid')::text\n  ))                                           as fingerprint,\n  'ide'                                        as source,\n  'electricity'                                as category,\n  'planned'                                    as status,\n  municipio                                    as city,\n  via                                          as street,\n  nullif(numero,'')                            as street_number,\n  lat::double precision                        as lat,\n  lon::double precision                        as lon,\n  (to_timestamp(fecha||' '||hora_inicio,'DD/MM/YYYY HH24:MI') at time zone 'Europe/Madrid') as start_ts_utc,\n  (to_timestamp(fecha||' '||hora_fin   ,'DD/MM/YYYY HH24:MI') at time zone 'Europe/Madrid') as end_ts_utc,\n  null::text                                   as description,\n  null::text                                   as event_id,\n  now() at time zone 'utc'                     as ingested_at_utc\nfrom \"appdb\".\"staging\".\"electricity\"", "relation_name": "\"appdb\".\"analytics_staging\".\"stg_electricity\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-21T19:36:59.764214Z", "completed_at": "2025-10-21T19:36:59.767498Z"}, {"name": "execute", "started_at": "2025-10-21T19:36:59.767498Z", "completed_at": "2025-10-21T19:36:59.808689Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04555821418762207, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enterate.stg_gas", "compiled": true, "compiled_code": "-- Gas simulado -> normaliza a modelo com\u00fan\nselect\n  md5(concat_ws('||',\n      'gas','gas',\n      coalesce(direccion,''),\n      coalesce(nullif(start_ts,''),''),\n      coalesce(nullif(end_ts,''),'')\n  ))                                             as fingerprint,\n  'gas'                                          as source,\n  'gas'                                          as category,\n  case\n    when coalesce(nullif(lower(programado::text),''),'false')\n         in ('true','t','1','yes','y','si','s\u00ed') then 'planned'\n    else 'unplanned'\n  end                                            as status,\n  'Madrid'                                       as city,\n  direccion                                      as street,\n  null::text                                     as street_number,\n  lat::double precision                          as lat,\n  lon::double precision                          as lon,\n  nullif(start_ts,'')::timestamptz               as start_ts_utc,\n  nullif(end_ts,'')::timestamptz                 as end_ts_utc,\n  mensaje                                        as description,\n  event_id::text                                 as event_id,\n  now() at time zone 'utc'                       as ingested_at_utc\nfrom \"appdb\".\"staging\".\"gas\"", "relation_name": "\"appdb\".\"analytics_staging\".\"stg_gas\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-21T19:36:59.813798Z", "completed_at": "2025-10-21T19:36:59.817489Z"}, {"name": "execute", "started_at": "2025-10-21T19:36:59.817489Z", "completed_at": "2025-10-21T19:36:59.864229Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05148792266845703, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enterate.stg_road", "compiled": true, "compiled_code": "-- Ayuntamiento (tr\u00e1fico/obras)\nselect\n  md5(concat_ws('||',\n      'ayto',\n      case when coalesce(es_obras,false) then 'road_works'\n           when coalesce(es_accidente,false) then 'accident'\n           else 'road' end,\n      coalesce(municipio,''), coalesce(coalesce(via,descripcion,''),''), coalesce(numero,''),\n      coalesce(nullif(start_ts,''),'') , coalesce(nullif(end_ts,''),'')\n  ))                                           as fingerprint,\n  'ayto'                                       as source,\n  case when coalesce(es_obras,false) then 'road_works'\n       when coalesce(es_accidente,false) then 'accident'\n       else 'road' end                         as category,\n  case when nullif(estado,'') = '1' then 'active' else 'planned' end      as status,\n  municipio                                    as city,\n  coalesce(via, descripcion)                   as street,\n  nullif(numero,'')                            as street_number,\n  lat::double precision                        as lat,\n  lon::double precision                        as lon,\n  nullif(start_ts,'')::timestamptz             as start_ts_utc,\n  nullif(end_ts,'')::timestamptz               as end_ts_utc,\n  descripcion                                  as description,\n  coalesce(id_incidencia::text, event_id::text) as event_id,\n  now() at time zone 'utc'                     as ingested_at_utc\nfrom \"appdb\".\"staging\".\"road\"", "relation_name": "\"appdb\".\"analytics_staging\".\"stg_road\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-21T19:36:59.868146Z", "completed_at": "2025-10-21T19:36:59.871162Z"}, {"name": "execute", "started_at": "2025-10-21T19:36:59.872161Z", "completed_at": "2025-10-21T19:36:59.921923Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05567455291748047, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.enterate.stg_water", "compiled": true, "compiled_code": "-- Canal de Isabel II (agua) -> normaliza a modelo com\u00fan\nselect\n  md5(concat_ws('||',\n      'canal','water',\n      coalesce(direccion,''),\n      coalesce(nullif(start_ts,''),''),\n      coalesce(nullif(end_ts,''),'')\n  ))                                             as fingerprint,\n  'canal'                                        as source,\n  'water'                                        as category,\n  case\n    when coalesce(nullif(lower(programado::text),''),'false')\n         in ('true','t','1','yes','y','si','s\u00ed') then 'planned'\n    else 'unplanned'\n  end                                            as status,\n  'Madrid'                                       as city,\n  direccion                                      as street,\n  null::text                                     as street_number,\n  lat::double precision                          as lat,\n  lon::double precision                          as lon,\n  nullif(start_ts,'')::timestamptz               as start_ts_utc,\n  nullif(end_ts,'')::timestamptz                 as end_ts_utc,\n  mensaje                                        as description,\n  event_id::text                                 as event_id,\n  now() at time zone 'utc'                       as ingested_at_utc\nfrom \"appdb\".\"staging\".\"water\"", "relation_name": "\"appdb\".\"analytics_staging\".\"stg_water\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-21T19:36:59.927985Z", "completed_at": "2025-10-21T19:36:59.931992Z"}, {"name": "execute", "started_at": "2025-10-21T19:36:59.931992Z", "completed_at": "2025-10-21T19:37:00.031449Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10547447204589844, "adapter_response": {"_message": "SELECT 262", "code": "SELECT", "rows_affected": 262}, "message": "SELECT 262", "failures": null, "unique_id": "model.enterate.fct_events", "compiled": true, "compiled_code": "\n\nwith unioned as (\n  select * from \"appdb\".\"analytics_staging\".\"stg_electricity\"\n  union all\n  select * from \"appdb\".\"analytics_staging\".\"stg_water\"\n  union all\n  select * from \"appdb\".\"analytics_staging\".\"stg_road\"\n  union all\n  select * from \"appdb\".\"analytics_staging\".\"stg_gas\"\n)\n\nselect * from unioned\n\n", "relation_name": "\"appdb\".\"analytics_analytics\".\"fct_events\"", "batch_results": null}], "elapsed_time": 0.6558787822723389, "args": {"partial_parse": true, "upload_to_artifacts_ingest_api": false, "write_json": true, "defer": false, "require_nested_cumulative_type_params": false, "require_yaml_configuration_for_mf_time_spines": false, "show_all_deprecations": false, "state_modified_compare_vars": false, "indirect_selection": "eager", "use_colors_file": true, "validate_macro_args": false, "exclude": [], "log_format_file": "debug", "log_file_max_bytes": 10485760, "exclude_resource_types": [], "partial_parse_file_diff": true, "project_dir": "C:\\Users\\diego\\Documents\\Diego\\Master\\TFM\\Enterate\\etl\\warehouse\\dbt", "require_resource_names_without_spaces": true, "favor_state": false, "require_all_warnings_handled_by_warn_error": false, "log_path": "C:\\Users\\diego\\Documents\\Diego\\Master\\TFM\\Enterate\\etl\\warehouse\\dbt\\logs", "resource_types": [], "require_explicit_package_overrides_for_builtin_materializations": true, "send_anonymous_usage_stats": true, "static_parser": true, "log_level": "info", "show_resource_report": false, "include_saved_query": false, "vars": {}, "print": true, "quiet": false, "require_batched_execution_for_custom_microbatch_strategy": false, "cache_selected_only": false, "export_saved_queries": false, "invocation_command": "dbt build --project-dir C:\\Users\\diego\\Documents\\Diego\\Master\\TFM\\Enterate\\etl\\warehouse\\dbt", "use_colors": true, "which": "build", "source_freshness_run_project_hooks": true, "strict_mode": false, "use_fast_test_edges": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "printer_width": 80, "populate_cache": true, "macro_debugging": false, "skip_nodes_if_on_run_start_fails": false, "show": false, "version_check": true, "empty": false, "log_level_file": "debug", "state_modified_compare_more_unrendered_values": false, "select": [], "profiles_dir": "C:\\Users\\diego\\.dbt", "introspect": true, "log_format": "default"}}